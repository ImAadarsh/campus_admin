<?php
include 'config/show_errors.php';
session_start();

// Check if user is not logged in
if (!isset($_SESSION['user_id'])) {
    header("Location: index.php");
    exit();
}

// Include database connection
$conn = require_once 'config/config.php';

// Debug database connection
if (mysqli_connect_errno()) {
    die("Database connection failed: " . mysqli_connect_error());
}

// Initialize empty arrays
$users = [];
$trainers = [];

// Check database connection
if (mysqli_connect_errno()) {
    $_SESSION['error'] = "Database connection failed: " . mysqli_connect_error();
} else {
    // Try to fetch users
    try {
        // Check if users table exists
        $check_users_table = mysqli_query($conn, "SHOW TABLES LIKE 'users'");
        if (!$check_users_table) {
            throw new Exception("Error checking users table: " . mysqli_error($conn));
        }
        
        if (mysqli_num_rows($check_users_table) > 0) {
            // Users table exists, check columns
            $check_user_cols = mysqli_query($conn, "DESCRIBE users");
            if (!$check_user_cols) {
                throw new Exception("Error checking users table structure: " . mysqli_error($conn));
            }
            
            // Build query based on available columns
            $available_cols = [];
            while ($col = mysqli_fetch_assoc($check_user_cols)) {
                $available_cols[] = $col['Field'];
            }
            
            // Required columns
            $required_cols = ['id', 'first_name', 'last_name'];
            $optional_cols = ['email', 'phone'];
            $select_cols = [];
            
            // Check required columns
            foreach ($required_cols as $col) {
                if (!in_array($col, $available_cols)) {
                    throw new Exception("Required column '$col' missing from users table");
                }
                $select_cols[] = $col;
            }
            
            // Add optional columns if available
            foreach ($optional_cols as $col) {
                if (in_array($col, $available_cols)) {
                    $select_cols[] = $col;
                }
            }
            
            // Execute query
            $users_sql = "SELECT " . implode(", ", $select_cols) . " FROM users ORDER BY first_name ASC";
            $users_result = mysqli_query($conn, $users_sql);
            
            if (!$users_result) {
                throw new Exception("Users query failed: " . mysqli_error($conn));
            }
            
            $users = mysqli_fetch_all($users_result, MYSQLI_ASSOC);
        } else {
            throw new Exception("Users table does not exist");
        }
    } catch (Exception $e) {
        error_log("Error fetching users: " . $e->getMessage());
        $_SESSION['error'] = "Error fetching users: " . $e->getMessage();
    }
    
    // Try to fetch trainers
    try {
        // Check if trainers table exists
        $check_trainers_table = mysqli_query($conn, "SHOW TABLES LIKE 'trainers'");
        if (!$check_trainers_table) {
            throw new Exception("Error checking trainers table: " . mysqli_error($conn));
        }
        
        if (mysqli_num_rows($check_trainers_table) > 0) {
            // Trainers table exists, check columns
            $check_trainer_cols = mysqli_query($conn, "DESCRIBE trainers");
            if (!$check_trainer_cols) {
                throw new Exception("Error checking trainers table structure: " . mysqli_error($conn));
            }
            
            // Build query based on available columns
            $available_cols = [];
            while ($col = mysqli_fetch_assoc($check_trainer_cols)) {
                $available_cols[] = $col['Field'];
            }
            
            // Required columns
            $required_cols = ['id', 'first_name', 'last_name'];
            $optional_cols = ['designation', 'profile_img'];
            $select_cols = [];
            
            // Check required columns
            foreach ($required_cols as $col) {
                if (!in_array($col, $available_cols)) {
                    throw new Exception("Required column '$col' missing from trainers table");
                }
                $select_cols[] = $col;
            }
            
            // Add optional columns if available
            foreach ($optional_cols as $col) {
                if (in_array($col, $available_cols)) {
                    $select_cols[] = $col;
                }
            }
            
            // Execute query
            $trainers_sql = "SELECT " . implode(", ", $select_cols) . " FROM trainers ORDER BY first_name ASC";
            $trainers_result = mysqli_query($conn, $trainers_sql);
            
            if (!$trainers_result) {
                throw new Exception("Trainers query failed: " . mysqli_error($conn));
            }
            
            $trainers = mysqli_fetch_all($trainers_result, MYSQLI_ASSOC);
        } else {
            throw new Exception("Trainers table does not exist");
        }
    } catch (Exception $e) {
        error_log("Error fetching trainers: " . $e->getMessage());
        if (!isset($_SESSION['error'])) {
            $_SESSION['error'] = "Error fetching trainers: " . $e->getMessage();
        } else {
            $_SESSION['error'] .= "<br>Error fetching trainers: " . $e->getMessage();
        }
    }
}

// Get user type and name from session
$userType = $_SESSION['user_type'];
$userName = $_SESSION['user_name'];
$userId = $_SESSION['user_id'];

// Check if user is admin
if ($userType !== 'admin') {
    header("Location: index.php");
    exit();
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $user_id = mysqli_real_escape_string($conn, $_POST['user_id']);
    $trainer_id = mysqli_real_escape_string($conn, $_POST['trainer_id']);
    $time_slot_id = mysqli_real_escape_string($conn, $_POST['time_slot_id']);
    $booking_notes = mysqli_real_escape_string($conn, $_POST['booking_notes']);
    $amount = mysqli_real_escape_string($conn, $_POST['amount']); 
    $payment_method = mysqli_real_escape_string($conn, $_POST['payment_method'] ?? 'Admin Scheduled');

    // Start transaction
    mysqli_begin_transaction($conn);

    try {
        // Insert booking
        $booking_sql = "INSERT INTO bookings (user_id, time_slot_id, status, booking_notes, created_at, updated_at) 
                       VALUES (?, ?, 'confirmed', ?, NOW(), NOW())";
        $booking_stmt = mysqli_prepare($conn, $booking_sql);
        mysqli_stmt_bind_param($booking_stmt, "iis", $user_id, $time_slot_id, $booking_notes);
        mysqli_stmt_execute($booking_stmt);
        $booking_id = mysqli_insert_id($conn);

        // Generate unique transaction ID
        $transaction_id = 'ADMIN_' . date('YmdHis') . '_' . substr(uniqid(), -6);

        // Insert payment
        $payment_sql = "INSERT INTO payments (booking_id, amount, payment_method, transaction_id, status, payment_date, created_at, updated_at) 
                       VALUES (?, ?, ?, ?, 'completed', NOW(), NOW(), NOW())";
        $payment_stmt = mysqli_prepare($conn, $payment_sql);
        mysqli_stmt_bind_param($payment_stmt, "idss", $booking_id, $amount, $payment_method, $transaction_id);
        mysqli_stmt_execute($payment_stmt);

        // Update time slot status
        $update_slot_sql = "UPDATE time_slots SET status = 'booked' WHERE id = ?";
        $update_slot_stmt = mysqli_prepare($conn, $update_slot_sql);
        mysqli_stmt_bind_param($update_slot_stmt, "i", $time_slot_id);
        mysqli_stmt_execute($update_slot_stmt);

        // Commit transaction
        mysqli_commit($conn);
        $_SESSION['success'] = "Booking scheduled successfully! <br>Transaction ID: " . $transaction_id;
        header("Location: admin_booking.php");
        exit();

    } catch (Exception $e) {
        mysqli_rollback($conn);
        $_SESSION['error'] = "Error creating booking: " . $e->getMessage();
    }
}
?>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <title>Schedule Booking | Campus Coach Admin</title>
    <?php include 'includes/head.php'; ?>
    <!-- Flatpickr CSS -->
    <link href="assets/vendor/flatpickr/flatpickr.min.css" rel="stylesheet">
    <style>
        .booking-wizard-wrapper {
            position: relative;
            overflow: hidden;
        }
        .booking-wizard-step {
            transition: all 0.3s ease;
        }
        .card-title {
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        .card-title i {
            color: var(--bs-primary);
        }
        .user-card, .trainer-card, .timeslot-card {
            border: 2px solid transparent;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-bottom: 1rem;
            border-radius: 0.5rem;
            overflow: hidden;
        }
        .user-card:hover, .trainer-card:hover, .timeslot-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }
        .user-card.selected, .trainer-card.selected, .timeslot-card.selected {
            border-color: var(--bs-primary);
            background-color: rgba(var(--bs-primary-rgb), 0.05);
        }
        .user-info, .trainer-info {
            padding: 1rem;
        }
        .trainer-img {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 50%;
            margin-right: 1rem;
        }
        .user-details, .trainer-details {
            display: flex;
            flex-direction: column;
        }
        .date-selector {
            margin-bottom: 1.5rem;
        }
        .time-slot-details {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        .time-slot-time {
            font-weight: bold;
            font-size: 1.1rem;
            margin-bottom: 0.5rem;
        }
        .time-slot-date {
            color: var(--bs-secondary);
            margin-bottom: 0.5rem;
        }
        .time-slot-duration {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: var(--bs-secondary);
        }
        .time-slot-price {
            font-weight: bold;
            color: var(--bs-success);
        }
        .step-buttons {
            display: flex;
            justify-content: space-between;
            margin-top: 1.5rem;
        }
        .booking-summary {
            background-color: rgba(var(--bs-primary-rgb), 0.05);
            border-radius: 0.5rem;
            padding: 1.5rem;
        }
        .summary-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.75rem;
            padding-bottom: 0.75rem;
            border-bottom: 1px solid var(--bs-border-color);
        }
        .summary-item:last-child {
            border-bottom: none;
            margin-bottom: 0;
            padding-bottom: 0;
        }
        .summary-label {
            font-weight: 500;
            color: var(--bs-secondary);
        }
        .summary-value {
            font-weight: 600;
        }
        .summary-total {
            font-size: 1.25rem;
            color: var(--bs-primary);
            font-weight: 700;
        }
        .step-indicator {
            display: flex;
            justify-content: center;
            margin-bottom: 2rem;
        }
        .step {
            width: 2.5rem;
            height: 2.5rem;
            border-radius: 50%;
            background-color: var(--bs-light);
            color: var(--bs-secondary);
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            position: relative;
            z-index: 1;
        }
        .step.active {
            background-color: var(--bs-primary);
            color: white;
        }
        .step.completed {
            background-color: var(--bs-success);
            color: white;
        }
        .step-connector {
            flex: 1;
            height: 2px;
            background-color: var(--bs-border-color);
            margin-top: 1.25rem;
        }
        .step-connector.completed {
            background-color: var(--bs-success);
        }
        .search-box {
            position: relative;
            margin-bottom: 1.5rem;
        }
        .search-box input {
            padding-left: 2.5rem;
        }
        .search-box i {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--bs-secondary);
        }
        .no-results {
            text-align: center;
            padding: 2rem;
            color: var(--bs-secondary);
        }
        .flatpickr-day.selected {
            background-color: var(--bs-primary) !important;
            border-color: var(--bs-primary) !important;
        }
        .booking-status {
            margin-top: 1rem;
            text-align: center;
        }
        .booking-confirmation {
            text-align: center;
            padding: 2rem;
        }
        .booking-confirmation i {
            font-size: 3rem;
            color: var(--bs-success);
            margin-bottom: 1rem;
        }
        .booking-confirmation h4 {
            margin-bottom: 1rem;
            color: var(--bs-success);
        }
        .no-timeslots {
            text-align: center;
            padding: 2rem;
            background-color: var(--bs-light);
            border-radius: 0.5rem;
            margin-top: 1rem;
        }
        .user-email, .user-phone {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-top: 0.25rem;
            color: var(--bs-secondary);
            font-size: 0.9rem;
        }
        .trainer-designation {
            color: var(--bs-info);
            font-size: 0.9rem;
            margin-top: 0.25rem;
        }
        @media (max-width: 768px) {
            .user-card, .trainer-card {
                flex-direction: column;
            }
            .trainer-img {
                margin-right: 0;
                margin-bottom: 1rem;
            }
        }
    </style>
</head>

<body>
    <div class="wrapper">
        <?php include 'includes/sidenav.php'; ?>
        <?php include 'includes/topbar.php'; ?>

        <div class="page-content">
            <div class="page-container">
                <div class="row">
                    <div class="col-12">
                        <div class="page-title-box">
                            <div class="page-title-right">
                                <ol class="breadcrumb m-0">
                                    <li class="breadcrumb-item"><a href="dashboard.php">Dashboard</a></li>
                                    <li class="breadcrumb-item"><a href="bookings.php">Bookings</a></li>
                                    <li class="breadcrumb-item active">Schedule New Booking</li>
                                </ol>
                            </div>
                            <h4 class="page-title">Schedule New Booking</h4>
                        </div>
                    </div>
                </div>

                <?php if (isset($_SESSION['success'])) : ?>
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <?php 
                        echo $_SESSION['success'];
                        unset($_SESSION['success']);
                        ?>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                <?php endif; ?>

                <?php if (isset($_SESSION['error'])) : ?>
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <?php 
                        echo $_SESSION['error'];
                        unset($_SESSION['error']);
                        ?>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                <?php endif; ?>

                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-body">
                                <!-- Step indicators -->
                                <div class="step-indicator">
                                    <div class="step active" id="step-1">1</div>
                                    <div class="step-connector" id="connector-1"></div>
                                    <div class="step" id="step-2">2</div>
                                    <div class="step-connector" id="connector-2"></div>
                                    <div class="step" id="step-3">3</div>
                                    <div class="step-connector" id="connector-3"></div>
                                    <div class="step" id="step-4">4</div>
                                </div>

                                <form method="POST" id="booking-form">
                                    <div class="booking-wizard-wrapper">
                                        <!-- Step 1: Select User -->
                                        <div class="booking-wizard-step" id="step1-content">
                                            <h4 class="card-title"><i class="ti ti-user"></i> Select User</h4>
                                            
                                            <div class="search-box">
                                                <i class="ti ti-search"></i>
                                                <input type="text" class="form-control" id="user-search" placeholder="Search by name or email...">
                                            </div>
                                            
                                            <div class="row" id="users-container">
                                                <?php foreach ($users as $user): ?>
                                                <div class="col-md-6 col-lg-4 user-item">
                                                    <div class="card user-card d-flex flex-row" data-id="<?php echo $user['id']; ?>">
                                                        <div class="user-info">
                                                            <div class="user-details">
                                                                <h5 class="mb-1"><?php echo htmlspecialchars($user['first_name'] . ' ' . $user['last_name']); ?></h5>
                                                                <?php if (!empty($user['email'])): ?>
                                                                <div class="user-email">
                                                                    <i class="ti ti-mail"></i>
                                                                    <span><?php echo htmlspecialchars($user['email']); ?></span>
                                                                </div>
                                                                <?php endif; ?>
                                                                <?php if (!empty($user['phone'])): ?>
                                                                <div class="user-phone">
                                                                    <i class="ti ti-phone"></i>
                                                                    <span><?php echo htmlspecialchars($user['phone']); ?></span>
                                                                </div>
                                                                <?php endif; ?>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <?php endforeach; ?>
                                            </div>
                                            
                                            <div id="no-users-found" class="no-results" style="display: none;">
                                                <i class="ti ti-search-off fs-48"></i>
                                                <h5 class="mt-2">No users found</h5>
                                                <p>Try a different search term</p>
                                            </div>
                                            
                                            <input type="hidden" name="user_id" id="user_id" required>
                                            
                                            <div class="step-buttons">
                                                <div></div> <!-- Placeholder for alignment -->
                                                <button type="button" class="btn btn-primary next-step" data-step="1" disabled>
                                                    Next <i class="ti ti-arrow-right"></i>
                                                </button>
                                            </div>
                                        </div>
                                        
                                        <!-- Step 2: Select Trainer -->
                                        <div class="booking-wizard-step" id="step2-content" style="display: none;">
                                            <h4 class="card-title"><i class="ti ti-users"></i> Select Trainer</h4>
                                            
                                            <div class="search-box">
                                                <i class="ti ti-search"></i>
                                                <input type="text" class="form-control" id="trainer-search" placeholder="Search trainer by name...">
                                            </div>
                                            
                                            <div class="row" id="trainers-container">
                                                <?php foreach ($trainers as $trainer): ?>
                                                <div class="col-md-6 col-lg-4 trainer-item">
                                                    <div class="card trainer-card d-flex flex-row" data-id="<?php echo $trainer['id']; ?>">
                                                        <img src="<?php echo !empty($trainer['profile_img']) ? $uri.$trainer['profile_img'] : 'assets/images/default-avatar.jpg'; ?>" 
                                                             class="trainer-img" alt="<?php echo htmlspecialchars($trainer['first_name']); ?>">
                                                        <div class="trainer-info">
                                                            <div class="trainer-details">
                                                                <h5 class="mb-1"><?php echo htmlspecialchars($trainer['first_name'] . ' ' . $trainer['last_name']); ?></h5>
                                                                <?php if (!empty($trainer['designation'])): ?>
                                                                <div class="trainer-designation">
                                                                    <?php echo htmlspecialchars($trainer['designation']); ?>
                                                                </div>
                                                                <?php endif; ?>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <?php endforeach; ?>
                                            </div>
                                            
                                            <div id="no-trainers-found" class="no-results" style="display: none;">
                                                <i class="ti ti-search-off fs-48"></i>
                                                <h5 class="mt-2">No trainers found</h5>
                                                <p>Try a different search term</p>
                                            </div>
                                            
                                            <div class="alert alert-info mt-3" id="trainer-debug-section" style="display: none;">
                                                <h5>Debug Information</h5>
                                                <p>Selected Trainer ID: <span id="debug-trainer-id"></span></p>
                                                <p id="debug-message"></p>
                                                <div class="mt-2">
                                                    <button type="button" id="btn-check-availability" class="btn btn-sm btn-info">
                                                        <i class="ti ti-search"></i> Check Availability
                                                    </button>
                                                    <button type="button" id="btn-create-test-data" class="btn btn-sm btn-secondary">
                                                        <i class="ti ti-plus"></i> Create Test Data
                                                    </button>
                                                </div>
                                                <div id="debug-results" class="mt-2"></div>
                                            </div>
                                            
                                            <input type="hidden" name="trainer_id" id="trainer_id" required>
                                            
                                            <div class="step-buttons">
                                                <button type="button" class="btn btn-secondary prev-step" data-step="2">
                                                    <i class="ti ti-arrow-left"></i> Previous
                                                </button>
                                                <button type="button" class="btn btn-primary next-step" data-step="2" disabled>
                                                    Next <i class="ti ti-arrow-right"></i>
                                                </button>
                                            </div>
                                        </div>
                                        
                                        <!-- Step 3: Select Time Slot -->
                                        <div class="booking-wizard-step" id="step3-content" style="display: none;">
                                            <h4 class="card-title"><i class="ti ti-calendar-time"></i> Select Time Slot</h4>
                                            
                                            <div class="date-selector d-flex align-items-center">
                                                <div class="flex-grow-1 me-2">
                                                    <label for="date-select" class="form-label">Select Date</label>
                                                    <select class="form-select" id="date-select">
                                                        <option value="">Select a date</option>
                                                        <!-- Dates will be dynamically populated -->
                                                    </select>
                                                </div>
                                                <div class="pt-4">
                                                    <button type="button" id="btn-refresh-dates" class="btn btn-sm btn-outline-secondary" title="Refresh dates">
                                                        <i class="ti ti-refresh"></i>
                                                    </button>
                                                </div>
                                            </div>
                                            
                                            <div class="form-check mb-3">
                                                <input class="form-check-input" type="checkbox" id="show-all-slots">
                                                <label class="form-check-label" for="show-all-slots">
                                                    Show all time slots (including booked ones)
                                                </label>
                                            </div>
                                            
                                            <div id="timeslots-container">
                                                <div class="no-timeslots">
                                                    <i class="ti ti-calendar fs-48"></i>
                                                    <h5 class="mt-2">Select a date to view available time slots</h5>
                                                </div>
                                            </div>
                                            
                                            <input type="hidden" name="time_slot_id" id="time_slot_id" required>
                                            
                                            <div class="step-buttons">
                                                <button type="button" class="btn btn-secondary prev-step" data-step="3">
                                                    <i class="ti ti-arrow-left"></i> Previous
                                                </button>
                                                <button type="button" class="btn btn-primary next-step" data-step="3" disabled>
                                                    Next <i class="ti ti-arrow-right"></i>
                                                </button>
                                            </div>
                                        </div>
                                        
                                        <!-- Step 4: Booking Summary and Confirmation -->
                                        <div class="booking-wizard-step" id="step4-content" style="display: none;">
                                            <h4 class="card-title"><i class="ti ti-clipboard-check"></i> Booking Summary</h4>
                                            
                                            <div class="booking-summary">
                                                <div class="summary-item">
                                                    <div class="summary-label">User</div>
                                                    <div class="summary-value" id="summary-user">-</div>
                                                </div>
                                                <div class="summary-item">
                                                    <div class="summary-label">Trainer</div>
                                                    <div class="summary-value" id="summary-trainer">-</div>
                                                </div>
                                                <div class="summary-item">
                                                    <div class="summary-label">Date</div>
                                                    <div class="summary-value" id="summary-date">-</div>
                                                </div>
                                                <div class="summary-item">
                                                    <div class="summary-label">Time</div>
                                                    <div class="summary-value" id="summary-time">-</div>
                                                </div>
                                                <div class="summary-item">
                                                    <div class="summary-label">Duration</div>
                                                    <div class="summary-value" id="summary-duration">-</div>
                                                </div>
                                                <div class="summary-item">
                                                    <div class="summary-label">Price</div>
                                                    <div class="summary-value" id="summary-price">-</div>
                                                </div>
                                            </div>
                                            
                                            <div class="mb-3 mt-4">
                                                <label for="payment_method" class="form-label">Payment Method</label>
                                                <select class="form-select" id="payment_method" name="payment_method">
                                                    <option value="Admin Scheduled">Admin Scheduled</option>
                                                    <option value="Cash">Cash</option>
                                                    <option value="Bank Transfer">Bank Transfer</option>
                                                    <option value="Credit Card">Credit Card</option>
                                                    <option value="Other">Other</option>
                                                </select>
                                            </div>
                                            
                                            <div class="mb-3">
                                                <label for="booking_notes" class="form-label">Booking Notes</label>
                                                <textarea class="form-control" id="booking_notes" name="booking_notes" rows="3" 
                                                          placeholder="Enter any special notes or requirements"></textarea>
                                            </div>
                                            
                                            <input type="hidden" name="amount" id="amount" value="0">
                                            
                                            <div class="step-buttons">
                                                <button type="button" class="btn btn-secondary prev-step" data-step="4">
                                                    <i class="ti ti-arrow-left"></i> Previous
                                                </button>
                                                <button type="submit" class="btn btn-success" id="confirm-booking">
                                                    <i class="ti ti-check"></i> Confirm Booking
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <?php include 'includes/footer.php'; ?>
        </div>
    </div>

    <?php include 'includes/theme_settings.php'; ?>

    <!-- Core JS -->
    <script src="assets/vendor/jquery/jquery.min.js"></script>
    <script src="assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="assets/vendor/flatpickr/flatpickr.min.js"></script>
    
    <script>
        $(document).ready(function() {
            var selectedUser = null;
            var selectedTrainer = null;
            var selectedTimeSlot = null;
            var selectedDate = null;
            var availableDates = [];
            var timeSlotDetails = null;
            
            // User search functionality
            $('#user-search').on('input', function() {
                const searchTerm = $(this).val().toLowerCase();
                let matchFound = false;
                
                $('.user-item').each(function() {
                    const userName = $(this).find('h5').text().toLowerCase();
                    const userEmail = $(this).find('.user-email span').text().toLowerCase();
                    const userPhone = $(this).find('.user-phone span').text().toLowerCase();
                    
                    if (userName.includes(searchTerm) || userEmail.includes(searchTerm) || userPhone.includes(searchTerm)) {
                        $(this).show();
                        matchFound = true;
                    } else {
                        $(this).hide();
                    }
                });
                
                if (matchFound) {
                    $('#no-users-found').hide();
                } else {
                    $('#no-users-found').show();
                }
            });
            
            // Trainer search functionality
            $('#trainer-search').on('input', function() {
                const searchTerm = $(this).val().toLowerCase();
                let matchFound = false;
                
                $('.trainer-item').each(function() {
                    const trainerName = $(this).find('h5').text().toLowerCase();
                    const trainerDesignation = $(this).find('.trainer-designation').text().toLowerCase();
                    
                    if (trainerName.includes(searchTerm) || trainerDesignation.includes(searchTerm)) {
                        $(this).show();
                        matchFound = true;
                    } else {
                        $(this).hide();
                    }
                });
                
                if (matchFound) {
                    $('#no-trainers-found').hide();
                } else {
                    $('#no-trainers-found').show();
                }
            });
            
            // User selection
            $(document).on('click', '.user-card', function() {
                $('.user-card').removeClass('selected');
                $(this).addClass('selected');
                selectedUser = {
                    id: $(this).data('id'),
                    name: $(this).find('h5').text()
                };
                $('#user_id').val(selectedUser.id);
                $('.next-step[data-step="1"]').prop('disabled', false);
            });
            
            // Trainer selection
            $(document).on('click', '.trainer-card', function() {
                $('.trainer-card').removeClass('selected');
                $(this).addClass('selected');
                selectedTrainer = {
                    id: $(this).data('id'),
                    name: $(this).find('h5').text()
                };
                $('#trainer_id').val(selectedTrainer.id);
                $('.next-step[data-step="2"]').prop('disabled', false);
                
                // Update debug section
                $('#debug-trainer-id').text(selectedTrainer.id);
                $('#trainer-debug-section').show();
                
                // Fetch available dates
                fetchAvailableDates(selectedTrainer.id);
            });
            
            // Date selection change event
            $(document).on('change', '#date-select', function() {
                selectedDate = $(this).val();
                if (selectedDate) {
                    fetchTimeSlots(selectedTrainer.id, selectedDate);
                } else {
                    $('#timeslots-container').html(`
                        <div class="no-timeslots">
                            <i class="ti ti-calendar fs-48"></i>
                            <h5 class="mt-2">Select a date to view available time slots</h5>
                        </div>
                    `);
                    $('.next-step[data-step="3"]').prop('disabled', true);
                }
            });
            
            // Show all slots checkbox change event
            $(document).on('change', '#show-all-slots', function() {
                if (selectedDate) {
                    fetchTimeSlots(selectedTrainer.id, selectedDate);
                }
            });
            
            // Time slot selection
            $(document).on('click', '.timeslot-card', function() {
                $('.timeslot-card').removeClass('selected');
                $(this).addClass('selected');
                selectedTimeSlot = $(this).data('id');
                $('#time_slot_id').val(selectedTimeSlot);
                
                // Store time slot details for summary
                timeSlotDetails = {
                    date: $(this).data('date'),
                    start_time: $(this).data('start-time'),
                    end_time: $(this).data('end-time'),
                    duration: $(this).data('duration'),
                    price: $(this).data('price')
                };
                
                $('.next-step[data-step="3"]').prop('disabled', false);
            });
            
            // Next step navigation
            $('.next-step').click(function() {
                const currentStep = parseInt($(this).data('step'));
                const nextStep = currentStep + 1;
                
                // Update step indicators
                $(`#step-${currentStep}`).removeClass('active').addClass('completed');
                $(`#step-${nextStep}`).addClass('active');
                $(`#connector-${currentStep}`).addClass('completed');
                
                // Hide current step, show next step
                $(`#step${currentStep}-content`).hide();
                $(`#step${nextStep}-content`).show();
                
                // If moving to summary step, populate the summary
                if (nextStep === 4) {
                    populateSummary();
                }
            });
            
            // Previous step navigation
            $('.prev-step').click(function() {
                const currentStep = parseInt($(this).data('step'));
                const prevStep = currentStep - 1;
                
                // Update step indicators
                $(`#step-${currentStep}`).removeClass('active');
                $(`#step-${prevStep}`).removeClass('completed').addClass('active');
                $(`#connector-${prevStep}`).removeClass('completed');
                
                // Hide current step, show previous step
                $(`#step${currentStep}-content`).hide();
                $(`#step${prevStep}-content`).show();
            });
            
            // Function to fetch available dates
            function fetchAvailableDates(trainerId) {
                // Show loading indicator in the date dropdown
                $('#date-select').empty().append($('<option>', {
                    value: '',
                    text: 'Loading dates...'
                }));
                
                console.log('Fetching available dates for trainer ID:', trainerId);
                
                $.ajax({
                    url: 'get_available_dates.php',
                    method: 'POST',
                    data: { trainer_id: trainerId },
                    dataType: 'json',
                    success: function(response) {
                        console.log('Dates response:', response);
                        
                        if (response.success && response.dates && response.dates.length > 0) {
                            availableDates = response.dates;
                            console.log('Available dates found:', availableDates);
                            populateDateDropdown(availableDates);
                        } else {
                            console.error('No dates found or error in response:', response);
                            $('#date-select').empty().append($('<option>', {
                                value: '',
                                text: 'No available dates'
                            }));
                            $('#timeslots-container').empty().append(`
                                <div class="no-timeslots">
                                    <i class="ti ti-calendar-off fs-48"></i>
                                    <h5 class="mt-2">No available dates found</h5>
                                    <p>The selected trainer has no available time slots</p>
                                </div>
                            `);
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('AJAX error when fetching dates:', status, error);
                        console.log('Response text:', xhr.responseText);
                        
                        $('#date-select').empty().append($('<option>', {
                            value: '',
                            text: 'Error loading dates'
                        }));
                        $('#timeslots-container').empty().append(`
                            <div class="no-timeslots">
                                <i class="ti ti-alert-circle fs-48"></i>
                                <h5 class="mt-2">Error loading dates</h5>
                                <p>Please check the console for details</p>
                            </div>
                        `);
                    }
                });
            }
            
            // Function to populate date dropdown
            function populateDateDropdown(dates) {
                var $select = $('#date-select');
                $select.empty();
                
                // Add default option
                $select.append($('<option>', {
                    value: '',
                    text: 'Select a date'
                }));
                
                // Sort dates in ascending order
                dates.sort(function(a, b) {
                    return new Date(a) - new Date(b);
                });
                
                // Add date options
                dates.forEach(function(date) {
                    $select.append($('<option>', {
                        value: date,
                        text: formatDate(date)
                    }));
                });
            }
            
            // Function to fetch time slots
            function fetchTimeSlots(trainerId, date) {
                // Debug info
                console.log('Fetching time slots for trainer ID:', trainerId, 'and date:', date);
                
                // Show loading indicator
                $('#timeslots-container').empty().append(`
                    <div class="no-timeslots">
                        <i class="ti ti-loader animate-spin fs-48"></i>
                        <h5 class="mt-2">Loading time slots...</h5>
                    </div>
                `);
                
                // Make sure we have both a trainer ID and date
                if (!trainerId || !date) {
                    $('#timeslots-container').html(`
                        <div class="no-timeslots">
                            <i class="ti ti-alert-circle fs-48"></i>
                            <h5 class="mt-2">Missing required parameters</h5>
                            <p>Trainer ID: ${trainerId || 'missing'}, Date: ${date || 'missing'}</p>
                        </div>
                    `);
                    return;
                }
                
                $.ajax({
                    url: 'get_available_slots.php',
                    method: 'POST',
                    data: { 
                        trainer_id: trainerId,
                        date: date,
                        show_all: $('#show-all-slots').is(':checked') ? 1 : 0
                    },
                    dataType: 'json',
                    success: function(response) {
                        console.log('Response received:', response);
                        
                        if (response.success && response.slots && response.slots.length > 0) {
                            displayTimeSlots(response.slots);
                        } else {
                            console.log('No slots found or success is false');
                            
                            // Check if there are any slots at all in debug info
                            if (response.debug && response.debug.all_slots && response.debug.all_slots.length > 0 && $('#show-all-slots').is(':checked')) {
                                console.log('Showing all slots from debug info:', response.debug.all_slots);
                                displayTimeSlots(response.debug.all_slots, true);
                            } else {
                                const debugInfo = response.debug ? `
                                    <div class="mt-2">
                                        <small>Debug Info:</small>
                                        <ul class="small">
                                            <li>Show All: ${response.debug.show_all ? 'Yes' : 'No'}</li>
                                            <li>Available Slots: ${response.debug.available_slots_count}</li>
                                            <li>Total Slots: ${response.debug.all_slots_count}</li>
                                            <li>Has Availability: ${response.debug.trainer_has_availability ? 'Yes' : 'No'}</li>
                                        </ul>
                                    </div>
                                ` : '';
                                
                                $('#timeslots-container').html(`
                                    <div class="no-timeslots">
                                        <i class="ti ti-calendar-off fs-48"></i>
                                        <h5 class="mt-2">No available time slots</h5>
                                        <p>${response.debug && response.debug.all_slots_count > 0 ? 'There are ' + response.debug.all_slots_count + ' slots, but none are available' : 'No time slots are available for the selected date'}</p>
                                        ${debugInfo}
                                        <div class="mt-3">
                                            <button type="button" id="btn-check-slots" class="btn btn-sm btn-primary" data-trainer="${trainerId}" data-date="${date}">
                                                <i class="ti ti-search"></i> Check Slots Directly
                                            </button>
                                        </div>
                                    </div>
                                `);
                                
                                // Add event handler for direct slot check
                                $('#btn-check-slots').on('click', function() {
                                    const trainerIdBtn = $(this).data('trainer');
                                    const dateBtn = $(this).data('date');
                                    
                                    const debugUrl = `debug_slots.php?trainer_id=${trainerIdBtn}&date=${dateBtn}`;
                                    window.open(debugUrl, '_blank');
                                });
                            }
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('AJAX error:', status, error);
                        console.log('Response text:', xhr.responseText);
                        
                        let errorDetails = '<p>Please check the console for details</p>';
                        
                        try {
                            // Try to parse error response as JSON
                            const errorResponse = JSON.parse(xhr.responseText);
                            if (errorResponse.message) {
                                errorDetails = `<p>Error: ${errorResponse.message}</p>`;
                            }
                        } catch (e) {
                            // If it's not valid JSON, show the raw response (truncated)
                            const truncatedResponse = xhr.responseText.substring(0, 200) + 
                                (xhr.responseText.length > 200 ? '...' : '');
                            errorDetails = `<p>Error: ${error}</p><pre class="small">${truncatedResponse}</pre>`;
                        }
                        
                        $('#timeslots-container').html(`
                            <div class="no-timeslots">
                                <i class="ti ti-alert-circle fs-48"></i>
                                <h5 class="mt-2">Error loading time slots</h5>
                                ${errorDetails}
                                <div class="mt-3">
                                    <button type="button" id="btn-check-slots" class="btn btn-sm btn-primary" data-trainer="${trainerId}" data-date="${date}">
                                        <i class="ti ti-search"></i> Check Slots Directly
                                    </button>
                                </div>
                            </div>
                        `);
                        
                        // Add event handler for direct slot check
                        $('#btn-check-slots').on('click', function() {
                            const trainerIdBtn = $(this).data('trainer');
                            const dateBtn = $(this).data('date');
                            
                            const debugUrl = `debug_slots.php?trainer_id=${trainerIdBtn}&date=${dateBtn}`;
                            window.open(debugUrl, '_blank');
                        });
                    }
                });
            }
            
            // Function to display time slots
            function displayTimeSlots(slots, showAll = false) {
                console.log('Displaying time slots:', slots);
                
                var $container = $('#timeslots-container');
                $container.empty();
                
                var $row = $('<div>', { class: 'row' });
                
                slots.forEach(function(slot) {
                    const isAvailable = slot.status === 'available';
                    const cardClass = isAvailable ? 'timeslot-card' : 'timeslot-card unavailable-slot';
                    
                    var $col = $('<div>', { class: 'col-md-6 col-lg-4' });
                    var $card = $('<div>', { 
                        class: 'card ' + cardClass,
                        'data-id': slot.id,
                        'data-date': slot.date,
                        'data-start-time': slot.start_time,
                        'data-end-time': slot.end_time,
                        'data-duration': slot.duration_minutes,
                        'data-price': slot.price
                    });
                    
                    if (!isAvailable) {
                        $card.css('opacity', '0.6').css('cursor', 'not-allowed').attr('title', 'This slot is not available');
                    }
                    
                    var $cardBody = $('<div>', { class: 'card-body' });
                    var $timeSlotDetails = $('<div>', { class: 'time-slot-details' });
                    
                    var $detailsLeft = $('<div>');
                    $detailsLeft.append(
                        $('<div>', { class: 'time-slot-time', text: slot.start_time + ' - ' + slot.end_time }),
                        $('<div>', { class: 'time-slot-date', text: formatDate(slot.date) }),
                        $('<div>', { class: 'time-slot-duration' }).append(
                            $('<i>', { class: 'ti ti-clock' }),
                            $('<span>', { text: slot.duration_minutes + ' minutes' })
                        )
                    );
                    
                    if (!isAvailable) {
                        $detailsLeft.append(
                            $('<div>', { class: 'text-danger' }).append(
                                $('<i>', { class: 'ti ti-ban' }),
                                document.createTextNode(' ' + slot.status)
                            )
                        );
                    }
                    
                    var $detailsRight = $('<div>', {
                        class: 'time-slot-price',
                        text: '₹' + slot.price
                    });
                    
                    $timeSlotDetails.append($detailsLeft, $detailsRight);
                    $cardBody.append($timeSlotDetails);
                    $card.append($cardBody);
                    $col.append($card);
                    $row.append($col);
                });
                
                $container.append($row);
                
                // Make only available slots clickable
                if (showAll) {
                    $('.unavailable-slot').on('click', function(e) {
                        e.preventDefault();
                        return false;
                    });
                }
            }
            
            // Function to format date
            function formatDate(dateString) {
                const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
                return new Date(dateString).toLocaleDateString('en-US', options);
            }
            
            // Function to populate summary
            function populateSummary() {
                $('#summary-user').text(selectedUser.name);
                $('#summary-trainer').text(selectedTrainer.name);
                $('#summary-date').text(formatDate(timeSlotDetails.date));
                $('#summary-time').text(`${timeSlotDetails.start_time} - ${timeSlotDetails.end_time}`);
                $('#summary-duration').text(`${timeSlotDetails.duration} minutes`);
                $('#summary-price').text(`₹${timeSlotDetails.price}`);
                
                // Set amount for form submission
                $('#amount').val(timeSlotDetails.price);
            }
            
            // Form submission
            $('#booking-form').submit(function() {
                $('#confirm-booking').prop('disabled', true).html('<i class="ti ti-loader animate-spin"></i> Processing...');
            });

            // Debug buttons
            $('#btn-check-availability').on('click', function(e) {
                e.preventDefault();
                
                if (!selectedTrainer) {
                    alert('Please select a trainer first');
                    return;
                }
                
                $('#debug-message').text('Checking availability...');
                $('#debug-results').empty();
                
                $.ajax({
                    url: 'check_trainer_availability.php',
                    method: 'GET',
                    data: { trainer_id: selectedTrainer.id },
                    dataType: 'json',
                    success: function(response) {
                        console.log('Availability check response:', response);
                        $('#debug-message').text('Check complete. See console for full details.');
                        
                        if (response.success && response.trainers && response.trainers.length > 0) {
                            const trainer = response.trainers[0];
                            
                            let html = `<div class="card">
                                <div class="card-body">
                                    <h6>Trainer: ${trainer.name}</h6>
                                    <p>Total availabilities: ${trainer.total_availabilities}</p>
                                    <p>Total available slots: ${trainer.total_available_slots}</p>
                                </div>
                            </div>`;
                            
                            $('#debug-results').html(html);
                            
                            // Refresh dates dropdown if we have availabilities
                            if (trainer.total_availabilities > 0) {
                                fetchAvailableDates(selectedTrainer.id);
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error('Error checking availability:', status, error);
                            $('#debug-message').text('Error checking availability. See console for details.');
                            $('#debug-results').html('<div class="alert alert-danger">Error checking availability.</div>');
                        }
                    });
                });

            $('#btn-create-test-data').on('click', function(e) {
                e.preventDefault();
                
                if (!selectedTrainer) {
                    alert('Please select a trainer first');
                    return;
                }
                
                if (!confirm('This will create test availability and time slots for the selected trainer. Continue?')) {
                    return;
                }
                
                $('#debug-message').text('Creating test data...');
                $('#debug-results').empty();
                
                $.ajax({
                    url: 'test_create_data.php',
                    method: 'GET',
                    data: { trainer_id: selectedTrainer.id },
                    dataType: 'json',
                    success: function(response) {
                        console.log('Create test data response:', response);
                        $('#debug-message').text('Test data created. See console for details.');
                        
                        if (response.success) {
                            let html = `<div class="alert alert-success">
                                <p>${response.message}</p>
                            </div>`;
                            
                            $('#debug-results').html(html);
                            
                            // Refresh dates dropdown with new data
                            fetchAvailableDates(selectedTrainer.id);
                        },
                        error: function(xhr, status, error) {
                            console.error('Error creating test data:', status, error);
                            $('#debug-message').text('Error creating test data. See console for details.');
                            $('#debug-results').html('<div class="alert alert-danger">Error creating test data.</div>');
                        }
                    });
                });
            });

            // Add a refresh dates button handler
            $('#btn-refresh-dates').on('click', function(e) {
                e.preventDefault();
                
                if (!selectedTrainer) {
                    alert('No trainer selected');
                    return;
                }
                
                fetchAvailableDates(selectedTrainer.id);
            });
        });
    </script>
</body>
</html> 